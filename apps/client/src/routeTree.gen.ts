/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TimelineImport } from './routes/timeline'
import { Route as SettingsImport } from './routes/settings'
import { Route as LoginImport } from './routes/login'
import { Route as BookmarksImport } from './routes/bookmarks'
import { Route as IndexImport } from './routes/index'
import { Route as TwitterAccountsIndexImport } from './routes/twitter-accounts.index'
import { Route as TargetAccountsIndexImport } from './routes/target-accounts.index'
import { Route as TwitterAccountsCreateImport } from './routes/twitter-accounts.create'
import { Route as TwitterAccountsAccountIdImport } from './routes/twitter-accounts.$accountId'
import { Route as TestApiImport } from './routes/test.api'
import { Route as TargetAccountsCreateImport } from './routes/target-accounts.create'
import { Route as TargetAccountsAccountIdImport } from './routes/target-accounts.$accountId'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'
import { Route as DemoStoreImport } from './routes/demo.store'
import { Route as AdminUsersIndexImport } from './routes/admin.users.index'
import { Route as AdminUsersCreateImport } from './routes/admin.users.create'
import { Route as AdminUsersUserIdImport } from './routes/admin.users.$userId'

// Create/Update Routes

const TimelineRoute = TimelineImport.update({
  id: '/timeline',
  path: '/timeline',
  getParentRoute: () => rootRoute,
} as any)

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const BookmarksRoute = BookmarksImport.update({
  id: '/bookmarks',
  path: '/bookmarks',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TwitterAccountsIndexRoute = TwitterAccountsIndexImport.update({
  id: '/twitter-accounts/',
  path: '/twitter-accounts/',
  getParentRoute: () => rootRoute,
} as any)

const TargetAccountsIndexRoute = TargetAccountsIndexImport.update({
  id: '/target-accounts/',
  path: '/target-accounts/',
  getParentRoute: () => rootRoute,
} as any)

const TwitterAccountsCreateRoute = TwitterAccountsCreateImport.update({
  id: '/twitter-accounts/create',
  path: '/twitter-accounts/create',
  getParentRoute: () => rootRoute,
} as any)

const TwitterAccountsAccountIdRoute = TwitterAccountsAccountIdImport.update({
  id: '/twitter-accounts/$accountId',
  path: '/twitter-accounts/$accountId',
  getParentRoute: () => rootRoute,
} as any)

const TestApiRoute = TestApiImport.update({
  id: '/test/api',
  path: '/test/api',
  getParentRoute: () => rootRoute,
} as any)

const TargetAccountsCreateRoute = TargetAccountsCreateImport.update({
  id: '/target-accounts/create',
  path: '/target-accounts/create',
  getParentRoute: () => rootRoute,
} as any)

const TargetAccountsAccountIdRoute = TargetAccountsAccountIdImport.update({
  id: '/target-accounts/$accountId',
  path: '/target-accounts/$accountId',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const DemoStoreRoute = DemoStoreImport.update({
  id: '/demo/store',
  path: '/demo/store',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/admin/users/',
  path: '/admin/users/',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersCreateRoute = AdminUsersCreateImport.update({
  id: '/admin/users/create',
  path: '/admin/users/create',
  getParentRoute: () => rootRoute,
} as any)

const AdminUsersUserIdRoute = AdminUsersUserIdImport.update({
  id: '/admin/users/$userId',
  path: '/admin/users/$userId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/bookmarks': {
      id: '/bookmarks'
      path: '/bookmarks'
      fullPath: '/bookmarks'
      preLoaderRoute: typeof BookmarksImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/timeline': {
      id: '/timeline'
      path: '/timeline'
      fullPath: '/timeline'
      preLoaderRoute: typeof TimelineImport
      parentRoute: typeof rootRoute
    }
    '/demo/store': {
      id: '/demo/store'
      path: '/demo/store'
      fullPath: '/demo/store'
      preLoaderRoute: typeof DemoStoreImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
    '/target-accounts/$accountId': {
      id: '/target-accounts/$accountId'
      path: '/target-accounts/$accountId'
      fullPath: '/target-accounts/$accountId'
      preLoaderRoute: typeof TargetAccountsAccountIdImport
      parentRoute: typeof rootRoute
    }
    '/target-accounts/create': {
      id: '/target-accounts/create'
      path: '/target-accounts/create'
      fullPath: '/target-accounts/create'
      preLoaderRoute: typeof TargetAccountsCreateImport
      parentRoute: typeof rootRoute
    }
    '/test/api': {
      id: '/test/api'
      path: '/test/api'
      fullPath: '/test/api'
      preLoaderRoute: typeof TestApiImport
      parentRoute: typeof rootRoute
    }
    '/twitter-accounts/$accountId': {
      id: '/twitter-accounts/$accountId'
      path: '/twitter-accounts/$accountId'
      fullPath: '/twitter-accounts/$accountId'
      preLoaderRoute: typeof TwitterAccountsAccountIdImport
      parentRoute: typeof rootRoute
    }
    '/twitter-accounts/create': {
      id: '/twitter-accounts/create'
      path: '/twitter-accounts/create'
      fullPath: '/twitter-accounts/create'
      preLoaderRoute: typeof TwitterAccountsCreateImport
      parentRoute: typeof rootRoute
    }
    '/target-accounts/': {
      id: '/target-accounts/'
      path: '/target-accounts'
      fullPath: '/target-accounts'
      preLoaderRoute: typeof TargetAccountsIndexImport
      parentRoute: typeof rootRoute
    }
    '/twitter-accounts/': {
      id: '/twitter-accounts/'
      path: '/twitter-accounts'
      fullPath: '/twitter-accounts'
      preLoaderRoute: typeof TwitterAccountsIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/$userId': {
      id: '/admin/users/$userId'
      path: '/admin/users/$userId'
      fullPath: '/admin/users/$userId'
      preLoaderRoute: typeof AdminUsersUserIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/create': {
      id: '/admin/users/create'
      path: '/admin/users/create'
      fullPath: '/admin/users/create'
      preLoaderRoute: typeof AdminUsersCreateImport
      parentRoute: typeof rootRoute
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/admin/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/bookmarks': typeof BookmarksRoute
  '/login': typeof LoginRoute
  '/settings': typeof SettingsRoute
  '/timeline': typeof TimelineRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/target-accounts/$accountId': typeof TargetAccountsAccountIdRoute
  '/target-accounts/create': typeof TargetAccountsCreateRoute
  '/test/api': typeof TestApiRoute
  '/twitter-accounts/$accountId': typeof TwitterAccountsAccountIdRoute
  '/twitter-accounts/create': typeof TwitterAccountsCreateRoute
  '/target-accounts': typeof TargetAccountsIndexRoute
  '/twitter-accounts': typeof TwitterAccountsIndexRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/admin/users/create': typeof AdminUsersCreateRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/bookmarks': typeof BookmarksRoute
  '/login': typeof LoginRoute
  '/settings': typeof SettingsRoute
  '/timeline': typeof TimelineRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/target-accounts/$accountId': typeof TargetAccountsAccountIdRoute
  '/target-accounts/create': typeof TargetAccountsCreateRoute
  '/test/api': typeof TestApiRoute
  '/twitter-accounts/$accountId': typeof TwitterAccountsAccountIdRoute
  '/twitter-accounts/create': typeof TwitterAccountsCreateRoute
  '/target-accounts': typeof TargetAccountsIndexRoute
  '/twitter-accounts': typeof TwitterAccountsIndexRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/admin/users/create': typeof AdminUsersCreateRoute
  '/admin/users': typeof AdminUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/bookmarks': typeof BookmarksRoute
  '/login': typeof LoginRoute
  '/settings': typeof SettingsRoute
  '/timeline': typeof TimelineRoute
  '/demo/store': typeof DemoStoreRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/target-accounts/$accountId': typeof TargetAccountsAccountIdRoute
  '/target-accounts/create': typeof TargetAccountsCreateRoute
  '/test/api': typeof TestApiRoute
  '/twitter-accounts/$accountId': typeof TwitterAccountsAccountIdRoute
  '/twitter-accounts/create': typeof TwitterAccountsCreateRoute
  '/target-accounts/': typeof TargetAccountsIndexRoute
  '/twitter-accounts/': typeof TwitterAccountsIndexRoute
  '/admin/users/$userId': typeof AdminUsersUserIdRoute
  '/admin/users/create': typeof AdminUsersCreateRoute
  '/admin/users/': typeof AdminUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/bookmarks'
    | '/login'
    | '/settings'
    | '/timeline'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/target-accounts/$accountId'
    | '/target-accounts/create'
    | '/test/api'
    | '/twitter-accounts/$accountId'
    | '/twitter-accounts/create'
    | '/target-accounts'
    | '/twitter-accounts'
    | '/admin/users/$userId'
    | '/admin/users/create'
    | '/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/bookmarks'
    | '/login'
    | '/settings'
    | '/timeline'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/target-accounts/$accountId'
    | '/target-accounts/create'
    | '/test/api'
    | '/twitter-accounts/$accountId'
    | '/twitter-accounts/create'
    | '/target-accounts'
    | '/twitter-accounts'
    | '/admin/users/$userId'
    | '/admin/users/create'
    | '/admin/users'
  id:
    | '__root__'
    | '/'
    | '/bookmarks'
    | '/login'
    | '/settings'
    | '/timeline'
    | '/demo/store'
    | '/demo/tanstack-query'
    | '/target-accounts/$accountId'
    | '/target-accounts/create'
    | '/test/api'
    | '/twitter-accounts/$accountId'
    | '/twitter-accounts/create'
    | '/target-accounts/'
    | '/twitter-accounts/'
    | '/admin/users/$userId'
    | '/admin/users/create'
    | '/admin/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BookmarksRoute: typeof BookmarksRoute
  LoginRoute: typeof LoginRoute
  SettingsRoute: typeof SettingsRoute
  TimelineRoute: typeof TimelineRoute
  DemoStoreRoute: typeof DemoStoreRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  TargetAccountsAccountIdRoute: typeof TargetAccountsAccountIdRoute
  TargetAccountsCreateRoute: typeof TargetAccountsCreateRoute
  TestApiRoute: typeof TestApiRoute
  TwitterAccountsAccountIdRoute: typeof TwitterAccountsAccountIdRoute
  TwitterAccountsCreateRoute: typeof TwitterAccountsCreateRoute
  TargetAccountsIndexRoute: typeof TargetAccountsIndexRoute
  TwitterAccountsIndexRoute: typeof TwitterAccountsIndexRoute
  AdminUsersUserIdRoute: typeof AdminUsersUserIdRoute
  AdminUsersCreateRoute: typeof AdminUsersCreateRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BookmarksRoute: BookmarksRoute,
  LoginRoute: LoginRoute,
  SettingsRoute: SettingsRoute,
  TimelineRoute: TimelineRoute,
  DemoStoreRoute: DemoStoreRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  TargetAccountsAccountIdRoute: TargetAccountsAccountIdRoute,
  TargetAccountsCreateRoute: TargetAccountsCreateRoute,
  TestApiRoute: TestApiRoute,
  TwitterAccountsAccountIdRoute: TwitterAccountsAccountIdRoute,
  TwitterAccountsCreateRoute: TwitterAccountsCreateRoute,
  TargetAccountsIndexRoute: TargetAccountsIndexRoute,
  TwitterAccountsIndexRoute: TwitterAccountsIndexRoute,
  AdminUsersUserIdRoute: AdminUsersUserIdRoute,
  AdminUsersCreateRoute: AdminUsersCreateRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/bookmarks",
        "/login",
        "/settings",
        "/timeline",
        "/demo/store",
        "/demo/tanstack-query",
        "/target-accounts/$accountId",
        "/target-accounts/create",
        "/test/api",
        "/twitter-accounts/$accountId",
        "/twitter-accounts/create",
        "/target-accounts/",
        "/twitter-accounts/",
        "/admin/users/$userId",
        "/admin/users/create",
        "/admin/users/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/bookmarks": {
      "filePath": "bookmarks.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/timeline": {
      "filePath": "timeline.tsx"
    },
    "/demo/store": {
      "filePath": "demo.store.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    },
    "/target-accounts/$accountId": {
      "filePath": "target-accounts.$accountId.tsx"
    },
    "/target-accounts/create": {
      "filePath": "target-accounts.create.tsx"
    },
    "/test/api": {
      "filePath": "test.api.tsx"
    },
    "/twitter-accounts/$accountId": {
      "filePath": "twitter-accounts.$accountId.tsx"
    },
    "/twitter-accounts/create": {
      "filePath": "twitter-accounts.create.tsx"
    },
    "/target-accounts/": {
      "filePath": "target-accounts.index.tsx"
    },
    "/twitter-accounts/": {
      "filePath": "twitter-accounts.index.tsx"
    },
    "/admin/users/$userId": {
      "filePath": "admin.users.$userId.tsx"
    },
    "/admin/users/create": {
      "filePath": "admin.users.create.tsx"
    },
    "/admin/users/": {
      "filePath": "admin.users.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
